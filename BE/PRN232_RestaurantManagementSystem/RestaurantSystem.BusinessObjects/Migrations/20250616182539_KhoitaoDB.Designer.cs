// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantSystem.BusinessObjects.Models;

#nullable disable

namespace RestaurantSystem.BusinessObjects.Migrations
{
    [DbContext(typeof(AnJiiDbContext))]
    [Migration("20250616182539_KhoitaoDB")]
    partial class KhoitaoDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Bill", b =>
                {
                    b.Property<int>("BillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillID"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("BillID");

                    b.HasIndex("BillNumber")
                        .IsUnique();

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.HasIndex("StaffID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Bills", t =>
                        {
                            t.HasCheckConstraint("CK_Bills_TotalAmount", "[TotalAmount] >= 0");
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.ComboDetail", b =>
                {
                    b.Property<int>("ComboDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboDetailID"));

                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionComboID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ComboDetailID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("PromotionComboID");

                    b.ToTable("ComboDetails");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("LoyaltyPoints")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ItemName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TableID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("StaffID");

                    b.HasIndex("TableID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Orders", t =>
                        {
                            t.HasCheckConstraint("CK_Orders_Status", "[Status] IN ('Pending', 'Confirmed', 'Preparing', 'Ready', 'Served', 'Paid', 'Cancelled')");
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionComboID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PromotionComboID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionID"));

                    b.Property<int?>("BuyQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GetQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxDiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PromotionTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionID");

                    b.HasIndex("PromotionTypeID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.Property<int>("PromotionComboID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionComboID"));

                    b.Property<string>("ComboName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ComboPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionComboID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PromotionCombos");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionItem", b =>
                {
                    b.Property<int>("PromotionItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionItemID"));

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.HasKey("PromotionItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.Property<int>("PromotionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionTypeID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionTypeID");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PromotionTypes");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionUsage", b =>
                {
                    b.Property<int>("PromotionUsageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionUsageID"));

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PromotionUsageID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionUsages");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.QRSession", b =>
                {
                    b.Property<int>("QRSessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QRSessionID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SessionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TableID")
                        .HasColumnType("int");

                    b.HasKey("QRSessionID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SessionToken")
                        .IsUnique();

                    b.HasIndex("TableID");

                    b.ToTable("QRSessions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Reviews", t =>
                        {
                            t.HasCheckConstraint("CK_Reviews_Rating", "[Rating] BETWEEN 0 AND 5");
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.StaffSchedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("WorkShiftID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID");

                    b.HasIndex("StaffID");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("StaffSchedules");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.Property<int>("TableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ZoneID")
                        .HasColumnType("int");

                    b.HasKey("TableID");

                    b.HasIndex("QRCode")
                        .IsUnique();

                    b.HasIndex("TableNumber")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ZoneID");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.Property<int>("WorkShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkShiftID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("WorkShiftID");

                    b.HasIndex("ShiftName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("WorkShifts");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.Property<int>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZoneID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZoneID");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ZoneName")
                        .IsUnique();

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Bill", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("Bills")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Staff");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.ComboDetail", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("ComboDetails")
                        .HasForeignKey("MenuItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionCombo", "PromotionCombo")
                        .WithMany("ComboDetails")
                        .HasForeignKey("PromotionComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("PromotionCombo");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Category");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Staff");

                    b.Navigation("Table");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.OrderDetail", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("MenuItemID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionCombo", "PromotionCombo")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PromotionComboID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("MenuItem");

                    b.Navigation("Order");

                    b.Navigation("PromotionCombo");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionType", "PromotionType")
                        .WithMany("Promotions")
                        .HasForeignKey("PromotionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("PromotionType");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionCombos")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Promotion");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionItem", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("PromotionItems")
                        .HasForeignKey("MenuItemID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionItems")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MenuItem");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionUsage", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("PromotionUsages")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionUsages")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.QRSession", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("QRSessions")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Table", "Table")
                        .WithMany("QRSessions")
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Review", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("Reviews")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Role", "Role")
                        .WithMany("Staffs")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.StaffSchedule", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("StaffSchedules")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.WorkShift", "WorkShift")
                        .WithMany("StaffSchedules")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("UpdatedByStaff");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Zone", "Zone")
                        .WithMany("Tables")
                        .HasForeignKey("ZoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpdatedByStaff");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("QRSessions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.Navigation("ComboDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("PromotionItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");

                    b.Navigation("PromotionUsages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.Navigation("PromotionCombos");

                    b.Navigation("PromotionItems");

                    b.Navigation("PromotionUsages");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.Navigation("ComboDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Orders");

                    b.Navigation("StaffSchedules");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("QRSessions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.Navigation("StaffSchedules");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
