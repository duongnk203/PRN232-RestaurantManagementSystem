// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantSystem.BusinessObjects.Models;

#nullable disable

namespace RestaurantSystem.BusinessObjects.Migrations
{
    [DbContext(typeof(AnJiiDbContext))]
    [Migration("20250616190645_SeedingData_1")]
    partial class SeedingData_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Bill", b =>
                {
                    b.Property<int>("BillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillID"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("BillID");

                    b.HasIndex("BillNumber")
                        .IsUnique();

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.HasIndex("StaffID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Bills", t =>
                        {
                            t.HasCheckConstraint("CK_Bills_TotalAmount", "[TotalAmount] >= 0");
                        });

                    b.HasData(
                        new
                        {
                            BillID = 1,
                            BillDate = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            BillNumber = "BILL001",
                            ChangeAmount = 0.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            OrderID = 1,
                            PaidAmount = 465750.00m,
                            PaymentMethod = "QR_Pay",
                            ServiceCharge = 20250.00m,
                            StaffID = 4,
                            SubTotal = 405000.00m,
                            TaxAmount = 40500.00m,
                            TotalAmount = 465750.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            BillID = 2,
                            BillDate = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            BillNumber = "BILL002",
                            ChangeAmount = 0.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 25000.00m,
                            OrderID = 2,
                            PaidAmount = 231250.00m,
                            PaymentMethod = "QR_Pay",
                            ServiceCharge = 11750.00m,
                            StaffID = 4,
                            SubTotal = 235000.00m,
                            TaxAmount = 23500.00m,
                            TotalAmount = 231250.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            BillID = 3,
                            BillDate = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            BillNumber = "BILL003",
                            ChangeAmount = 0.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            OrderID = 3,
                            PaidAmount = 294000.00m,
                            PaymentMethod = "Transfer",
                            ServiceCharge = 14000.00m,
                            StaffID = 4,
                            SubTotal = 280000.00m,
                            TaxAmount = 28000.00m,
                            TotalAmount = 294000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            BillID = 4,
                            BillDate = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            BillNumber = "BILL004",
                            ChangeAmount = 0.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            OrderID = 4,
                            PaidAmount = 567500.00m,
                            PaymentMethod = "QR_Pay",
                            ServiceCharge = 25000.00m,
                            StaffID = 4,
                            SubTotal = 500000.00m,
                            TaxAmount = 50000.00m,
                            TotalAmount = 567500.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            BillID = 5,
                            BillDate = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            BillNumber = "BILL005",
                            ChangeAmount = 0.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            OrderID = 5,
                            PaidAmount = 423200.00m,
                            PaymentMethod = "Card",
                            ServiceCharge = 18400.00m,
                            StaffID = 4,
                            SubTotal = 368000.00m,
                            TaxAmount = 36800.00m,
                            TotalAmount = 423200.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Khai vị",
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Món ăn khai vị và nhẹ",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Món chính",
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Món ăn chính",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Tráng miệng",
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Món tráng miệng ngọt",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Đồ uống",
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đồ uống và giải khát",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.ComboDetail", b =>
                {
                    b.Property<int>("ComboDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboDetailID"));

                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionComboID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ComboDetailID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("PromotionComboID");

                    b.ToTable("ComboDetails");

                    b.HasData(
                        new
                        {
                            ComboDetailID = 1,
                            MenuItemID = 1,
                            PromotionComboID = 1,
                            Quantity = 2
                        },
                        new
                        {
                            ComboDetailID = 2,
                            MenuItemID = 2,
                            PromotionComboID = 1,
                            Quantity = 1
                        },
                        new
                        {
                            ComboDetailID = 3,
                            MenuItemID = 4,
                            PromotionComboID = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("LoyaltyPoints")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khachhang1@gmail.com",
                            FullName = "Hoàng Văn Em",
                            LoyaltyPoints = 50.00m,
                            PhoneNumber = "0912345678",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CustomerID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khachhang2@gmail.com",
                            FullName = "Nguyễn Thị Phượng",
                            LoyaltyPoints = 20.00m,
                            PhoneNumber = "0912345679",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ItemName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemID = 1,
                            CategoryID = 1,
                            Cost = 20000.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chả giò giòn với rau củ",
                            ImageURL = "cha_gio.jpg",
                            IsAvailable = true,
                            ItemName = "Chả giò",
                            Price = 50000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuItemID = 2,
                            CategoryID = 2,
                            Cost = 60000.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gà nướng với thảo mộc",
                            ImageURL = "ga_nuong.jpg",
                            IsAvailable = true,
                            ItemName = "Gà nướng",
                            Price = 150000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuItemID = 3,
                            CategoryID = 3,
                            Cost = 30000.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bánh sô-cô-la đậm đà",
                            ImageURL = "banh_socolate.jpg",
                            IsAvailable = true,
                            ItemName = "Bánh sô-cô-la",
                            Price = 80000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MenuItemID = 4,
                            CategoryID = 4,
                            Cost = 5000.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trà đá giải khát",
                            ImageURL = "tra_da.jpg",
                            IsAvailable = true,
                            ItemName = "Trà đá",
                            Price = 25000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TableID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("StaffID");

                    b.HasIndex("TableID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Orders", t =>
                        {
                            t.HasCheckConstraint("CK_Orders_Status", "[Status] IN ('Pending', 'Confirmed', 'Preparing', 'Ready', 'Served', 'Paid', 'Cancelled')");
                        });

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            CustomerName = "Hoàng Văn Em",
                            CustomerPhone = "0912345678",
                            DiscountAmount = 0.00m,
                            FinalAmount = 405000.00m,
                            OrderDate = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD001",
                            PaymentMethod = "QR_Pay",
                            PaymentStatus = "Partial",
                            StaffID = 2,
                            Status = "Cancelled",
                            TableID = 1,
                            TotalAmount = 405000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            OrderID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 2,
                            CustomerName = "Nguyễn Thị Phượng",
                            CustomerPhone = "0912345679",
                            DiscountAmount = 25000.00m,
                            FinalAmount = 230000.00m,
                            Notes = "Ưu tiên nhanh",
                            OrderDate = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD002",
                            PaymentMethod = "QR_Pay",
                            PaymentStatus = "Partial",
                            StaffID = 2,
                            Status = "Served",
                            TableID = 2,
                            TotalAmount = 255000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            OrderID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Khách lẻ",
                            DiscountAmount = 0.00m,
                            FinalAmount = 280000.00m,
                            OrderDate = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD003",
                            PaymentMethod = "QR_Pay",
                            PaymentStatus = "Partial",
                            StaffID = 2,
                            Status = "Ready",
                            TableID = 3,
                            TotalAmount = 280000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            OrderID = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            CustomerName = "Hoàng Văn Em",
                            CustomerPhone = "0912345678",
                            DiscountAmount = 0.00m,
                            FinalAmount = 500000.00m,
                            Notes = "Bàn VIP",
                            OrderDate = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD004",
                            PaymentMethod = "Card",
                            PaymentStatus = "Partial",
                            StaffID = 2,
                            Status = "Ready",
                            TableID = 4,
                            TotalAmount = 500000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        },
                        new
                        {
                            OrderID = 5,
                            CreatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 2,
                            CustomerName = "Nguyễn Thị Phượng",
                            CustomerPhone = "0912345679",
                            DiscountAmount = 0.00m,
                            FinalAmount = 368000.00m,
                            OrderDate = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD005",
                            PaymentMethod = "Card",
                            PaymentStatus = "Partial",
                            StaffID = 2,
                            Status = "Ready",
                            TableID = 1,
                            TotalAmount = 368000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 4
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionComboID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PromotionComboID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 1,
                            OrderID = 1,
                            Quantity = 3,
                            Status = "Preparing",
                            TotalPrice = 150000.00m,
                            UnitPrice = 50000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 2,
                            Notes = "Preparing",
                            OrderID = 1,
                            Quantity = 1,
                            Status = "Preparing",
                            TotalPrice = 150000.00m,
                            UnitPrice = 150000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 4,
                            OrderID = 1,
                            Quantity = 3,
                            Status = "Preparing",
                            TotalPrice = 75000.00m,
                            UnitPrice = 25000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 1,
                            OrderID = 2,
                            Quantity = 2,
                            Status = "Preparing",
                            TotalPrice = 100000.00m,
                            UnitPrice = 50000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 5,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 25000.00m,
                            MenuItemID = 3,
                            Notes = "Ưu tiên nhanh",
                            OrderID = 2,
                            Quantity = 2,
                            Status = "Preparing",
                            TotalPrice = 135000.00m,
                            UnitPrice = 80000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 6,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 2,
                            OrderID = 3,
                            Quantity = 1,
                            Status = "Preparing",
                            TotalPrice = 150000.00m,
                            UnitPrice = 150000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 7,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 4,
                            OrderID = 3,
                            Quantity = 2,
                            Status = "Ordered",
                            TotalPrice = 50000.00m,
                            UnitPrice = 25000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 8,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            OrderID = 3,
                            PromotionComboID = 1,
                            Quantity = 1,
                            Status = "Served",
                            TotalPrice = 350000.00m,
                            UnitPrice = 350000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 9,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 2,
                            Notes = "Thêm rau",
                            OrderID = 4,
                            Quantity = 2,
                            Status = "Served",
                            TotalPrice = 300000.00m,
                            UnitPrice = 150000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 10,
                            CreatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 3,
                            OrderID = 4,
                            Quantity = 2,
                            Status = "Served",
                            TotalPrice = 160000.00m,
                            UnitPrice = 80000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 11,
                            CreatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 1,
                            OrderID = 5,
                            Quantity = 2,
                            Status = "Served",
                            TotalPrice = 100000.00m,
                            UnitPrice = 50000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 12,
                            CreatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 2,
                            OrderID = 5,
                            Quantity = 1,
                            Status = "Served",
                            TotalPrice = 150000.00m,
                            UnitPrice = 150000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderDetailID = 13,
                            CreatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountAmount = 0.00m,
                            MenuItemID = 3,
                            OrderID = 5,
                            Quantity = 1,
                            Status = "Ready",
                            TotalPrice = 80000.00m,
                            UnitPrice = 80000.00m,
                            UpdatedAt = new DateTime(2025, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionID"));

                    b.Property<int?>("BuyQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GetQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxDiscountAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PromotionTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionID");

                    b.HasIndex("PromotionTypeID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            PromotionID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Giảm 10% trên tổng hóa đơn",
                            DiscountValue = 10.00m,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxDiscountAmount = 100000.00m,
                            PromotionName = "Giảm 10%",
                            PromotionTypeID = 1,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PromotionID = 2,
                            BuyQuantity = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mua 2 món tráng miệng tặng 1 miễn phí",
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GetQuantity = 1,
                            IsActive = true,
                            PromotionName = "Mua 2 tặng 1",
                            PromotionTypeID = 3,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PromotionID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Combo đặc biệt cho gia đình",
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PromotionName = "Combo Gia đình",
                            PromotionTypeID = 4,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.Property<int>("PromotionComboID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionComboID"));

                    b.Property<string>("ComboName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ComboPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionComboID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PromotionCombos");

                    b.HasData(
                        new
                        {
                            PromotionComboID = 1,
                            ComboName = "Combo Gia đình A",
                            ComboPrice = 350000.00m,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PromotionID = 3,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionItem", b =>
                {
                    b.Property<int>("PromotionItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionItemID"));

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.HasKey("PromotionItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("MenuItemID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionItems");

                    b.HasData(
                        new
                        {
                            PromotionItemID = 1,
                            MenuItemID = 3,
                            PromotionID = 2
                        },
                        new
                        {
                            PromotionItemID = 2,
                            CategoryID = 2,
                            PromotionID = 1
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.Property<int>("PromotionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionTypeID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PromotionTypeID");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PromotionTypes");

                    b.HasData(
                        new
                        {
                            PromotionTypeID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Giảm giá theo phần trăm",
                            TypeName = "Phần trăm",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PromotionTypeID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Giảm giá bằng số tiền cố định",
                            TypeName = "Số tiền cố định",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PromotionTypeID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mua X món tặng Y món miễn phí",
                            TypeName = "Mua X tặng Y",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PromotionTypeID = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Giảm giá cho combo món ăn",
                            TypeName = "Combo",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionUsage", b =>
                {
                    b.Property<int>("PromotionUsageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionUsageID"));

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PromotionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PromotionUsageID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PromotionID");

                    b.ToTable("PromotionUsages");

                    b.HasData(
                        new
                        {
                            PromotionUsageID = 1,
                            DiscountApplied = 25000.00m,
                            OrderID = 2,
                            PromotionID = 1,
                            UsedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.QRSession", b =>
                {
                    b.Property<int>("QRSessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QRSessionID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SessionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TableID")
                        .HasColumnType("int");

                    b.HasKey("QRSessionID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SessionToken")
                        .IsUnique();

                    b.HasIndex("TableID");

                    b.ToTable("QRSessions");

                    b.HasData(
                        new
                        {
                            QRSessionID = 1,
                            CustomerID = 1,
                            IsActive = true,
                            SessionStart = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SessionToken = "SESSION_001",
                            TableID = 1
                        },
                        new
                        {
                            QRSessionID = 2,
                            CustomerID = 2,
                            IsActive = true,
                            SessionStart = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            SessionToken = "SESSION_002",
                            TableID = 2
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Reviews", t =>
                        {
                            t.HasCheckConstraint("CK_Reviews_Rating", "[Rating] BETWEEN 0 AND 5");
                        });

                    b.HasData(
                        new
                        {
                            ReviewID = 1,
                            Comment = "Dịch vụ tuyệt vời, món ăn ngon!",
                            CreatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            OrderID = 1,
                            Rating = 5,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ReviewID = 2,
                            Comment = "Món ăn ngon nhưng phục vụ hơi chậm.",
                            CreatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 2,
                            OrderID = 2,
                            Rating = 4,
                            UpdatedAt = new DateTime(2025, 6, 17, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quản lý nhà hàng",
                            RoleName = "Quản lý",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhân viên phục vụ",
                            RoleName = "Phục vụ",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đầu bếp nhà bếp",
                            RoleName = "Đầu bếp",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhân viên thu ngân",
                            RoleName = "Thu ngân",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("RoleID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quanly@nhahang.com",
                            FullName = "Nguyễn Văn An",
                            IsActive = true,
                            PasswordHash = "hashed_password_1",
                            PhoneNumber = "0901234567",
                            RoleID = 1,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StaffID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phucvu1@nhahang.com",
                            FullName = "Trần Thị Bình",
                            IsActive = true,
                            PasswordHash = "hashed_password_2",
                            PhoneNumber = "0901234568",
                            RoleID = 2,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StaffID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "daubep1@nhahang.com",
                            FullName = "Lê Văn Cường",
                            IsActive = true,
                            PasswordHash = "hashed_password_3",
                            PhoneNumber = "0901234569",
                            RoleID = 3,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StaffID = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thungan1@nhahang.com",
                            FullName = "Phạm Thị Dung",
                            IsActive = true,
                            PasswordHash = "hashed_password_4",
                            PhoneNumber = "0901234570",
                            RoleID = 4,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.StaffSchedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("WorkShiftID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID");

                    b.HasIndex("StaffID");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("StaffSchedules");

                    b.HasData(
                        new
                        {
                            ScheduleID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Quản lý ca sáng",
                            ScheduleDate = new DateTime(2025, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StaffID = 1,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkShiftID = 1
                        },
                        new
                        {
                            ScheduleID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Phục vụ ca chiều",
                            ScheduleDate = new DateTime(2025, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StaffID = 2,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkShiftID = 2
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.Property<int>("TableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ZoneID")
                        .HasColumnType("int");

                    b.HasKey("TableID");

                    b.HasIndex("QRCode")
                        .IsUnique();

                    b.HasIndex("TableNumber")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ZoneID");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableID = 1,
                            Capacity = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            QRCode = "QR_B01",
                            Status = "Maintenance",
                            TableNumber = "B01",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneID = 1
                        },
                        new
                        {
                            TableID = 2,
                            Capacity = 4,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            QRCode = "QR_B02",
                            Status = "Reserved",
                            TableNumber = "B02",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneID = 1
                        },
                        new
                        {
                            TableID = 3,
                            Capacity = 6,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            QRCode = "QR_B03",
                            Status = "Occupied",
                            TableNumber = "B03",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneID = 2
                        },
                        new
                        {
                            TableID = 4,
                            Capacity = 8,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            QRCode = "QR_B04",
                            Status = "Available",
                            TableNumber = "B04",
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneID = 3
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.Property<int>("WorkShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkShiftID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("WorkShiftID");

                    b.HasIndex("ShiftName")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("WorkShifts");

                    b.HasData(
                        new
                        {
                            WorkShiftID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ca làm việc buổi sáng",
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            ShiftName = "Ca Sáng",
                            StartTime = new TimeSpan(0, 7, 0, 0, 0),
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkShiftID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ca làm việc buổi chiều",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ShiftName = "Ca Chiều",
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.Property<int>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZoneID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZoneID");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ZoneName")
                        .IsUnique();

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            ZoneID = 1,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khu vực ăn uống chính tầng 1",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneName = "Tầng 1"
                        },
                        new
                        {
                            ZoneID = 2,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khu vực ăn uống riêng tư tầng 2",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneName = "Tầng 2"
                        },
                        new
                        {
                            ZoneID = 3,
                            CreatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phòng ăn VIP độc quyền",
                            IsActive = true,
                            UpdatedAt = new DateTime(2025, 6, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneName = "Phòng VIP"
                        });
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Bill", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("Bills")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Staff");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.ComboDetail", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("ComboDetails")
                        .HasForeignKey("MenuItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionCombo", "PromotionCombo")
                        .WithMany("ComboDetails")
                        .HasForeignKey("PromotionComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("PromotionCombo");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Category");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Staff");

                    b.Navigation("Table");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.OrderDetail", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("MenuItemID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionCombo", "PromotionCombo")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PromotionComboID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("MenuItem");

                    b.Navigation("Order");

                    b.Navigation("PromotionCombo");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.PromotionType", "PromotionType")
                        .WithMany("Promotions")
                        .HasForeignKey("PromotionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("PromotionType");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionCombos")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Promotion");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionItem", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.MenuItem", "MenuItem")
                        .WithMany("PromotionItems")
                        .HasForeignKey("MenuItemID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionItems")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MenuItem");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionUsage", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("PromotionUsages")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("PromotionUsages")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.QRSession", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("QRSessions")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Table", "Table")
                        .WithMany("QRSessions")
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Review", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerID");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Order", "Order")
                        .WithMany("Reviews")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Role", "Role")
                        .WithMany("Staffs")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.StaffSchedule", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "Staff")
                        .WithMany("StaffSchedules")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.WorkShift", "WorkShift")
                        .WithMany("StaffSchedules")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("UpdatedByStaff");

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Zone", "Zone")
                        .WithMany("Tables")
                        .HasForeignKey("ZoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpdatedByStaff");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.HasOne("RestaurantSystem.BusinessObjects.Models.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("QRSessions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.MenuItem", b =>
                {
                    b.Navigation("ComboDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("PromotionItems");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Order", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");

                    b.Navigation("PromotionUsages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Promotion", b =>
                {
                    b.Navigation("PromotionCombos");

                    b.Navigation("PromotionItems");

                    b.Navigation("PromotionUsages");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionCombo", b =>
                {
                    b.Navigation("ComboDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.PromotionType", b =>
                {
                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Role", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Staff", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Orders");

                    b.Navigation("StaffSchedules");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Table", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("QRSessions");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.WorkShift", b =>
                {
                    b.Navigation("StaffSchedules");
                });

            modelBuilder.Entity("RestaurantSystem.BusinessObjects.Models.Zone", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
